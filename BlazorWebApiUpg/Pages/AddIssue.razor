@page "/add/issue"
<Authentication />
<h3>Add Issue</h3>

<RadzenTemplateForm Data="@issue" Submit="@((SD.Issue issue) => { Submit(issue); })">
    <RadzenFieldset Text="Add Issue">
        <div class="row">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Information" />
            </div>
            <div class="col-md-8">
                <RadzenTextArea style="width: 100%;" @bind-Value="issue.Information" Name="Information" />
            </div>

            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Customer" />
            </div>
            <div class="col-md-8">
                <RadzenDropDown @bind-Value="issue.CustomerId" Placeholder="Customer" Data="@customers" style="width: 100%;" TextProperty="CustomerName" ValueProperty="Id" Name="Customer">
                </RadzenDropDown>
            </div>
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Created By" />
            </div>
            <div class="col-md-8">
                <RadzenDropDown @bind-Value="issue.UserId" Placeholder="User" Data="@users" style="width: 100%;" TextProperty="DisplayName" ValueProperty="Id" Name="Created By">
                </RadzenDropDown>
            </div>
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Status" />
            </div>
            <div class="col-md-8">
                <RadzenDropDown @bind-Value="issue.StatusId" Placeholder="Status" Data="@statuses" style="width: 100%;" TextProperty="StatusText" ValueProperty="Id" Name="Status">
                </RadzenDropDown>
            </div>


        </div>

    </RadzenFieldset>
    <div class="row justify-content-center">
        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Add" />
        </div>
    </div>
</RadzenTemplateForm>


    @code {
        private SD.Issue issue { get; set; }
        private IEnumerable<SD.Customer> customers;
        private IEnumerable<SD.User> users;
        private IEnumerable<SD.Status> statuses;

        protected override async Task OnInitializedAsync()
        {
            issue = new SD.Issue();
            await LoadAllAsync();

        }

        private async Task LoadAllAsync()
        {

            customers = await Http.GetFromJsonAsync<IEnumerable<SD.Customer>>("https://localhost:44374/api/Customers/all");
            users = await Http.GetFromJsonAsync<IEnumerable<SD.User>>("https://localhost:44374/api/Users/all");
            statuses = await Http.GetFromJsonAsync<IEnumerable<SD.Status>>("https://localhost:44374/api/Issues/statuses");

        }

        void Submit(SD.Issue issue)
        {
            Http.PostAsJsonAsync<SD.Issue>("https://localhost:44374/api/Issues/add", issue);            
        }


    }
