@page "/add/customer"
<Authentication />
<h3>Add Issue</h3>

<RadzenTemplateForm Data="@customer" Submit="@((SD.Customer customer) => { Submit(customer).GetAwaiter(); })">
    <RadzenFieldset Text="Add Issue">
        <div class="row">

            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Customer name" />
            </div>
            <div class="col-md-8">

                <RadzenTextBox @bind-Value="customer.CustomerName" Placeholder="Name" style="width: 100%;" Name="Name">
                </RadzenTextBox>
            </div>
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Customer Phone" />
            </div>
            <div class="col-md-8">
                <RadzenTextBox @bind-Value="customer.Phone" Placeholder="Phone" style="width: 100%;" Name="Phone">
                </RadzenTextBox>
            </div>
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Customer Contact" />
            </div>
            <div class="col-md-8">
                <RadzenTextBox @bind-Value="customer.Contact" Placeholder="ex. John Svensson" style="width: 100%;" Name="Contact">
                </RadzenTextBox>
            </div>


        </div>

    </RadzenFieldset>
    <div class="row justify-content-center">
        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Add" />
        </div>
    </div>
</RadzenTemplateForm>

@code {

    private SD.Customer customer { get; set; }


    protected override void OnInitialized()
    {
        customer = new SD.Customer();

    }


    async Task Submit(SD.Customer customer)
    {
        await Http.PostAsJsonAsync<SD.Customer>("https://localhost:44374/api/Customers/add", customer);
    }

}
